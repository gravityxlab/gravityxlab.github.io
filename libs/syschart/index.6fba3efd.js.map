{"mappings":"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","sources":["<anon>","src/syschart/index.js","node_modules/@gravityxlab/libs/src/index.js","node_modules/@gravityxlab/libs/src/chart/Chart.js","node_modules/@gravityxlab/libs/src/chart/BaseChart.js","node_modules/@gravityxlab/libs/src/chart/Axis/AxisBottom.js","node_modules/@gravityxlab/libs/src/chart/Axis/Axis.js","node_modules/@gravityxlab/libs/src/time.js","node_modules/@gravityxlab/libs/src/canvas.js","node_modules/@gravityxlab/libs/src/chart/Axis/AxisRight.js","node_modules/@gravityxlab/libs/src/chart/Axis/AxisVertical.js","node_modules/@gravityxlab/libs/src/chart/Axis/AxisLeft.js","node_modules/@gravityxlab/libs/src/chart/Grid.js","node_modules/@gravityxlab/libs/src/array.js","node_modules/@gravityxlab/libs/src/chart/type/bar/index.js","node_modules/@gravityxlab/libs/src/chart/type/bar/render.js","node_modules/@gravityxlab/libs/src/chart/type/bar/dataset.js","node_modules/@gravityxlab/libs/src/chart/DataStash/ArrayStash.js","node_modules/@gravityxlab/libs/src/chart/type/line/index.js","node_modules/@gravityxlab/libs/src/chart/type/line/render.js","node_modules/@gravityxlab/libs/src/chart/type/line/dataset.js","node_modules/@gravityxlab/libs/src/chart/type/candlestick/index.js","node_modules/@gravityxlab/libs/src/chart/type/candlestick/render.js","node_modules/@gravityxlab/libs/src/chart/type/candlestick/dataset.js","node_modules/@gravityxlab/libs/src/chart/DataStash/OhlcStash.js","node_modules/@gravityxlab/libs/src/json.js"],"sourcesContent":["(function () {\nclass $652d1c8ff2fc739f$export$ba89768bd61fb9ef {\n    constructor(ctx, settings){\n        this.ctx = ctx;\n        this.width = this.ctx.canvas.width;\n        this.height = this.ctx.canvas.height;\n        this.settings = settings;\n        if (!this.settings.config) this.settings.config = [\n            {\n                chart: this.settings.chart,\n                key: this.settings.axisRight.key\n            }\n        ];\n        if (this.settings.axisBottom && !this.settings.axisBottom.height) this.settings.axisBottom.height = 40;\n        if (this.settings.axisLeft && !this.settings.axisLeft.width) this.settings.axisLeft.width = 50;\n        if (this.settings.axisRight && !this.settings.axisRight.width) this.settings.axisRight.width = 50;\n    }\n    get padding() {\n        return {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            ...this.settings.padding\n        };\n    }\n    get innerTop() {\n        return this.padding.top;\n    }\n    get innerLeft() {\n        if (this.settings.axisLeft) return this.settings.axisLeft?.width + this.padding.left;\n        return this.padding.left;\n    }\n    get innerHeight() {\n        return this.height - this.padding.top - this.padding.bottom - this.settings.axisBottom.height;\n    }\n    get innerBottom() {\n        return this.innerTop + this.innerHeight;\n    }\n    get innerWidth() {\n        return this.width - this.innerLeft - this.padding.right - this.settings.axisRight.width;\n    }\n    get theme() {\n        return {\n            text: \"#B7BDC6\",\n            ...this.settings.theme\n        };\n    }\n    clear() {\n        if (this.padding.top) this.ctx.clearRect(0, 0, this.width, this.padding.top);\n        if (this.padding.left) this.ctx.clearRect(0, 0, this.padding.left, this.height);\n        if (this.padding.right) this.ctx.clearRect(this.width - this.padding.right, 0, this.padding.right, this.height);\n    }\n}\n\n\nclass $3991084f38fd8b12$export$d06866a9fb0606da {\n    constructor(type, chart, settings){\n        this.type = type;\n        this.chart = chart;\n        this.settings = settings;\n    }\n    get key() {\n        return this.settings.key;\n    }\n    get range() {\n        return this.settings.range || [\n            \"auto\",\n            \"auto\"\n        ];\n    }\n    low(value) {\n        if (typeof this.range[0] === \"number\") return this.range[0];\n        return value;\n    }\n    high(value) {\n        if (typeof this.range[1] === \"number\") return this.range[1];\n        return value;\n    }\n}\n\n\nconst $b9599d9d0df2bf99$export$a23af3b48bd234ea = new Map([\n    [\n        /^(\\d+)d$/,\n        (match)=>parseInt(match[1], 10) * 86400000\n    ],\n    [\n        /^(\\d+)h$/,\n        (match)=>parseInt(match[1], 10) * 3600000\n    ],\n    [\n        /^(\\d+)m$/,\n        (match)=>parseInt(match[1], 10) * 60000\n    ],\n    [\n        /^(\\d+)s$/,\n        (match)=>parseInt(match[1], 10) * 1000\n    ]\n]);\nfunction $b9599d9d0df2bf99$export$5dd2165da01bec80(input) {\n    for (const [regex, calc] of $b9599d9d0df2bf99$export$a23af3b48bd234ea){\n        const match = regex.exec(input);\n        if (match) return calc(match);\n    }\n    throw new Error(\"No match any time format.\");\n}\nfunction $b9599d9d0df2bf99$export$464c6933f2a4525f(date, interval = $b9599d9d0df2bf99$export$5dd2165da01bec80(\"15m\")) {\n    date = typeof date === \"number\" ? new Date(date) : date;\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    const milliseconds = date.getMilliseconds();\n    const totalMilliseconds = hours * 3600000 + minutes * 60000 + seconds * 1000 + milliseconds;\n    const slot = Math.floor(totalMilliseconds / interval);\n    const startOfSlotMilliseconds = slot * interval;\n    const endOfSlotMilliseconds = (slot + 1) * interval;\n    const startTimestamp = date.setHours(0, 0, 0, 0) + startOfSlotMilliseconds;\n    const endTimestamp = date.setHours(0, 0, 0, 0) + endOfSlotMilliseconds;\n    return {\n        start: startTimestamp,\n        end: endTimestamp\n    };\n}\nfunction $b9599d9d0df2bf99$export$b26e4e7b620435eb(date, interval = $b9599d9d0df2bf99$export$5dd2165da01bec80(\"15m\")) {\n    date = typeof date === \"number\" ? new Date(date) : date;\n    const { start: start, end: end } = $b9599d9d0df2bf99$export$464c6933f2a4525f(date, interval);\n    return {\n        start: start,\n        end: end,\n        timestamp: start + (end - start) / 2\n    };\n}\nfunction $b9599d9d0df2bf99$export$d9468344d3651243(date, pattern) {\n    if (pattern.includes(\"MM\")) pattern = pattern.replace(/MM/g, String(date.getMonth() + 1).padStart(2, \"0\"));\n    if (pattern.includes(\"DD\")) pattern = pattern.replace(/DD/g, String(date.getDate()).padStart(2, \"0\"));\n    if (pattern.includes(\"HH\")) pattern = pattern.replace(/HH/g, String(date.getHours()).padStart(2, \"0\"));\n    if (pattern.includes(\"mm\")) pattern = pattern.replace(/mm/g, String(date.getMinutes()).padStart(2, \"0\"));\n    return pattern;\n}\n\n\nconst $d203371c3e704ae6$var$DEFAULT_SETTINGS = {\n    textAlign: \"center\",\n    textBaseline: \"middle\",\n    font: \"11px Arial\",\n    fillStyle: \"#B7BDC6\"\n};\nfunction $d203371c3e704ae6$export$6f093cfa640b7166(ctx, { textAlign: textAlign = $d203371c3e704ae6$var$DEFAULT_SETTINGS.textAlign, textBaseline: textBaseline = $d203371c3e704ae6$var$DEFAULT_SETTINGS.textBaseline, font: font = $d203371c3e704ae6$var$DEFAULT_SETTINGS.font, fillStyle: fillStyle = $d203371c3e704ae6$var$DEFAULT_SETTINGS.fillStyle } = $d203371c3e704ae6$var$DEFAULT_SETTINGS) {\n    return (text, x, y)=>{\n        ctx.textAlign = textAlign;\n        ctx.textBaseline = textBaseline;\n        ctx.font = font;\n        ctx.fillStyle = fillStyle;\n        ctx.fillText(text, x, y);\n    };\n}\n\n\nclass $3105f33038792f97$export$deea0fad05dcb466 extends (0, $3991084f38fd8b12$export$d06866a9fb0606da) {\n    constructor(chart, settings){\n        super(\"axis_bottom\", chart, settings);\n        this.left = this.chart.innerLeft;\n        this.height = this.settings.height;\n        this.top = this.chart.innerBottom;\n        this.width = this.chart.innerLeft + this.chart.innerWidth;\n        this.benchmark = {\n            point: this.chart.innerLeft + this.chart.innerWidth - 20,\n            value: null\n        };\n        this.tickInterval = settings.interval || (0, $b9599d9d0df2bf99$export$5dd2165da01bec80)(\"15m\");\n        this.tickIntervalCount = settings.tickIntervalCount;\n        this.tickSizeUnit = 6;\n        this.tickCount = Math.ceil(this.chart.innerWidth / (this.tickIntervalCount * this.tickSizeUnit));\n        this.tickSize = this.tickIntervalCount * this.tickSizeUnit;\n        this.ticks = [];\n    }\n    x(value) {\n        return this.benchmark.point + (value - this.benchmark.value) / this.tickInterval * this.tickSize;\n    }\n    value(x) {\n        return Math.floor((x - this.benchmark.point) / this.tickSize * this.tickInterval + this.benchmark.value);\n    }\n    draw(dataStash) {\n        this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n        let oldest = dataStash.oldest?.[this.key];\n        let latest = dataStash.latest?.[this.key];\n        if (!oldest || !latest) {\n            const now = Date.now();\n            if (!oldest) oldest = now;\n            if (!latest) latest = now;\n        }\n        const range = {\n            start: (0, $b9599d9d0df2bf99$export$464c6933f2a4525f)(oldest, this.tickInterval).start,\n            end: (0, $b9599d9d0df2bf99$export$464c6933f2a4525f)(latest, this.tickInterval).end\n        };\n        const values = [\n            range.end\n        ];\n        while(values[0] - this.tickInterval >= range.start && values.length <= this.tickCount)values.unshift(values[0] - this.tickInterval);\n        while(values.length <= this.tickCount)values.push(values[values.length - 1] + this.tickInterval);\n        this.benchmark.value = values[values.length - 2];\n        if (this.x(latest) > this.benchmark.point) this.benchmark.value = latest;\n        this.chart.ctx.beginPath();\n        this.chart.ctx.strokeStyle = \"#2B3139\";\n        this.chart.ctx.lineWidth = 1;\n        this.chart.ctx.moveTo(this.left, this.top);\n        this.chart.ctx.lineTo(this.width, this.top);\n        this.chart.ctx.stroke();\n        this.ticks = values.map((value)=>{\n            const date = new Date(value);\n            return {\n                label: this.settings.label(date),\n                value: date.getTime(),\n                x: this.x(value),\n                y: this.top + this.height / 2\n            };\n        });\n        this.ticks.forEach((tick)=>{\n            (0, $d203371c3e704ae6$export$6f093cfa640b7166)(this.chart.ctx, {\n                fillStyle: this.chart.theme.text\n            })(tick.label, tick.x, tick.y);\n        });\n    }\n}\n\n\n\n\nclass $ea69216c71752dbe$export$5aa047190a2e18c4 extends (0, $3991084f38fd8b12$export$d06866a9fb0606da) {\n    constructor(type, chart, bounds, settings){\n        super(type, chart, settings);\n        this.top = bounds.top;\n        this.left = bounds.left;\n        this.width = bounds.width;\n        this.height = bounds.height;\n        this.benchmark = {\n            point: this.chart.innerBottom - 10,\n            value: null\n        };\n        this.ticks = [];\n    }\n    get tickSize() {\n        return Math.abs(Math.floor((this.benchmark.point - this.top - 24) / 4));\n    }\n    y(value) {\n        return Math.min(this.benchmark.point + (this.benchmark.value - value) / this.tickInterval * this.tickSize, this.chart.innerBottom - 1);\n    }\n    draw(data) {\n        this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n        const lowHigh = this.chart.dataStash.helpers.lowHigh(data);\n        const low = this.low(Math.floor(lowHigh[0] / 20) * 20);\n        const high = this.high(Math.ceil(lowHigh[1] / 20) * 20);\n        this.chart.ctx.beginPath();\n        this.chart.ctx.strokeStyle = \"#2B3139\";\n        this.chart.ctx.lineWidth = 1;\n        if (this.type === \"axis_left\") {\n            this.chart.ctx.moveTo(this.left + this.width, this.top);\n            this.chart.ctx.lineTo(this.left + this.width, this.height);\n        } else {\n            this.chart.ctx.moveTo(this.left, this.top);\n            this.chart.ctx.lineTo(this.left, this.height);\n        }\n        if (low !== 0) {\n            this.chart.ctx.moveTo(this.left, this.chart.axisBottom.top);\n            this.chart.ctx.lineTo(this.chart.width, this.chart.axisBottom.top);\n        }\n        this.chart.ctx.stroke();\n        if (this.settings.unit) (0, $d203371c3e704ae6$export$6f093cfa640b7166)(this.chart.ctx, {\n            fillStyle: this.chart.theme.text\n        })(`(${this.settings.unit})`, this.left + this.width / 2, this.top + 10);\n        if (low === 0) {\n            this.benchmark.point = this.chart.axisBottom.top;\n            this.benchmark.value = 0;\n        } else this.benchmark.value = low;\n        this.tickInterval = Math.ceil((high - low) / 4);\n        const ticks = [];\n        let x;\n        if (this.type === \"axis_left\") x = this.chart.padding.left + this.width / 2;\n        else x = this.left + this.width / 2;\n        for(let index = 0; index < 5; index++){\n            const value = low + this.tickInterval * index;\n            const tick = {\n                label: value,\n                value: value,\n                x: x,\n                y: this.y(value)\n            };\n            ticks.push(tick);\n            (0, $d203371c3e704ae6$export$6f093cfa640b7166)(this.chart.ctx, {\n                fillStyle: this.chart.theme.text\n            })(tick.label, tick.x, tick.y);\n        }\n        this.ticks = ticks;\n    }\n}\n\n\n\nclass $e884809d69e70b58$export$2b9971b9af4b4b68 extends (0, $ea69216c71752dbe$export$5aa047190a2e18c4) {\n    constructor(chart, settings){\n        const bounds = {\n            top: chart.padding.top,\n            width: settings.width,\n            left: chart.innerLeft + chart.innerWidth,\n            height: chart.height - chart.padding.bottom\n        };\n        super(\"axis_right\", chart, bounds, settings);\n    }\n}\n\n\n\n\nclass $6527e3c781f90838$export$4b76feaa547cd202 extends (0, $ea69216c71752dbe$export$5aa047190a2e18c4) {\n    constructor(chart, settings){\n        const bounds = {\n            top: chart.padding.top,\n            width: settings.width,\n            left: chart.padding.left,\n            height: chart.height - chart.padding.bottom\n        };\n        super(\"axis_left\", chart, bounds, settings);\n    }\n}\n\n\nclass $767b03141f0c34df$export$ef2184bd89960b14 {\n    constructor(chart){\n        this.chart = chart;\n    }\n    draw(axisBottom, axisRight) {\n        this.left = this.chart.innerLeft;\n        this.top = 0;\n        this.width = this.chart.width - axisRight.width - this.left;\n        this.height = this.chart.innerBottom;\n        this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n        this.chart.ctx.beginPath();\n        this.chart.ctx.strokeStyle = \"#2B3139\";\n        this.chart.ctx.lineWidth = 1;\n        axisBottom.ticks.forEach((tick)=>{\n            if (tick.x > axisRight.left) return;\n            this.chart.ctx.moveTo(tick.x, this.top);\n            this.chart.ctx.lineTo(tick.x, this.height);\n        });\n        axisRight.ticks.forEach((tick)=>{\n            if (tick.y >= this.chart.innerBottom - 2) return;\n            this.chart.ctx.moveTo(this.left + this.chart.ctx.lineWidth, tick.y);\n            this.chart.ctx.lineTo(this.width + this.left, tick.y);\n        });\n        this.chart.ctx.stroke();\n    }\n}\n\n\nfunction $e80b768435707f60$export$2e0ae67339d5f1ac(array, target, attribute) {\n    let left = 0;\n    let right = array.length - 1;\n    while(left <= right){\n        const mid = Math.floor((left + right) / 2);\n        if (array[mid][attribute] < target) left = mid + 1;\n        else right = mid - 1;\n    }\n    return left;\n}\n\n\nclass $03fdc13f753a2bea$export$acaa6426d77a227e extends (0, $652d1c8ff2fc739f$export$ba89768bd61fb9ef) {\n    constructor(ctx, settings){\n        super(ctx, settings);\n        this.axisBottom = new (0, $3105f33038792f97$export$deea0fad05dcb466)(this, this.settings.axisBottom);\n        this.settings.config.forEach(({ chart: chart }, index)=>{\n            if (index === 0) this.dataStash = new chart.DataStash(this, {\n                onChange: this.draw.bind(this)\n            });\n        });\n        this.axisRight = new (0, $e884809d69e70b58$export$2b9971b9af4b4b68)(this, this.settings.axisRight);\n        if (this.settings.axisLeft) this.axisLeft = new (0, $6527e3c781f90838$export$4b76feaa547cd202)(this, this.settings.axisLeft);\n        this.grid = new (0, $767b03141f0c34df$export$ef2184bd89960b14)(this);\n    }\n    get data() {\n        const startIndex = (0, $e80b768435707f60$export$2e0ae67339d5f1ac)(this.dataStash.data, this.axisBottom.value(this.innerLeft - 10), this.settings.axisBottom.key);\n        return this.dataStash.data.slice(startIndex);\n    }\n    draw() {\n        this.axisBottom.draw(this.dataStash);\n        this.grid.draw(this.axisBottom, this.axisRight);\n        this.settings.config.forEach(({ chart: chart, key: key })=>{\n            const { render: render, dataset: dataset } = chart;\n            let transform;\n            if (this.axisRight.settings.key === key) transform = {\n                x: this.axisBottom.x.bind(this.axisBottom),\n                y: this.axisRight.y.bind(this.axisRight)\n            };\n            else if (this.axisLeft.settings.keys.includes(key)) transform = {\n                x: this.axisBottom.x.bind(this.axisBottom),\n                y: this.axisLeft.y.bind(this.axisLeft)\n            };\n            if (transform) render(this, dataset(this, key, transform), chart._settings);\n        });\n        this.axisRight.draw(this.data);\n        if (this.settings.axisLeft) this.axisLeft.draw(this.data);\n        super.clear();\n    }\n}\n\n\nconst $25ad58b84fcf74a0$export$b3890eb0ae9dca99 = (chart, dataset, settings = {})=>{\n    for (const item of dataset){\n        chart.ctx.fillStyle = settings.color;\n        chart.ctx.fillRect(...item);\n    }\n};\n\n\n\nconst $14e19c79c80f10e2$export$ff416b0d33795a06 = (chart, key, transform)=>{\n    const data = chart.data;\n    const transformData = (item)=>{\n        const { axisBottom: axisBottomSettings, axisBottom: { interval: interval, tickIntervalCount: tickIntervalCount } } = chart.settings;\n        const value = item[key];\n        const { start: start, end: end } = (0, $b9599d9d0df2bf99$export$b26e4e7b620435eb)(value.time || item[axisBottomSettings.key], interval / tickIntervalCount);\n        const x = transform.x(start);\n        const h = transform.y(value);\n        const dx = transform.x(end) - x;\n        const dy = chart.innerBottom - h;\n        return [\n            x,\n            h,\n            dx,\n            dy\n        ];\n    };\n    return {\n        get start () {\n            return transformData(data[0]);\n        },\n        get end () {\n            return transformData(data[data.length - 1]);\n        },\n        [Symbol.iterator] () {\n            let i = 0;\n            return {\n                next () {\n                    const item = data[i++];\n                    if (!item) return {\n                        done: true,\n                        value: null\n                    };\n                    return {\n                        done: false,\n                        value: transformData(item)\n                    };\n                }\n            };\n        }\n    };\n};\n\n\nclass $2c07ef7af6c6a670$export$3c28480140baf9f3 {\n    constructor(chart, { onChange: onChange = ()=>{} }){\n        this.chart = chart;\n        this.onChange = onChange;\n        this._data = new Map();\n    }\n    get key() {\n        return {\n            x: this.chart.axisBottom.key,\n            y: this.chart.axisRight.key\n        };\n    }\n    get data() {\n        return [\n            ...this._data.values()\n        ];\n    }\n    add(data) {\n        data = Array.isArray(data) ? data : [\n            data\n        ];\n        for(let index = 0; index < data.length; index++){\n            const item = data[index];\n            item.time = new Date(item[this.key.x]);\n            this._data.set(item.t, item);\n        }\n        this.onChange(this.data);\n    }\n    get oldest() {\n        return this.data[0];\n    }\n    get latest() {\n        return this.data[this.data.length - 1];\n    }\n    get helpers() {\n        const keyY = this.key.y;\n        return {\n            lowHigh (data) {\n                return data.reduce((acc, item)=>{\n                    if (acc[0] === undefined || item[keyY] < acc[0]) acc[0] = item[keyY];\n                    if (acc[1] === undefined || item[keyY] > acc[1]) acc[1] = item[keyY];\n                    return acc;\n                }, []);\n            }\n        };\n    }\n}\n\n\nclass $78aa687a3a3a1a75$var$Bar {\n    constructor(){\n        this._settings = {};\n        this.type = \"bar\";\n        this.render = (0, $25ad58b84fcf74a0$export$b3890eb0ae9dca99);\n        this.dataset = (0, $14e19c79c80f10e2$export$ff416b0d33795a06);\n        this.DataStash = (0, $2c07ef7af6c6a670$export$3c28480140baf9f3);\n    }\n    settings(settings) {\n        const bar = new $78aa687a3a3a1a75$var$Bar();\n        bar._settings = settings;\n        return bar;\n    }\n}\nconst $78aa687a3a3a1a75$export$d927737047eb3867 = new $78aa687a3a3a1a75$var$Bar();\n\n\nconst $74a7cbc4cfd4bd2b$var$DEFAULT_SETTINGS = {\n    gradient: true,\n    color: \"#FCD435\",\n    lineWidth: 1\n};\nconst $74a7cbc4cfd4bd2b$var$gradient = (chart, dataset, color)=>{\n    const gradient = chart.ctx.createLinearGradient(0, 0, 0, chart.innerBottom);\n    gradient.addColorStop(0, color);\n    gradient.addColorStop(1, `${color}00`);\n    chart.ctx.beginPath();\n    let moveTo;\n    for (const point of dataset)if (!moveTo) {\n        chart.ctx.moveTo(point.current.x, point.current.y);\n        moveTo = point.current;\n    } else chart.ctx.lineTo(point.current.x, point.current.y);\n    chart.ctx.lineTo(dataset.end.x, chart.innerBottom);\n    chart.ctx.lineTo(dataset.start.x, chart.innerBottom);\n    chart.ctx.closePath();\n    chart.ctx.fillStyle = gradient;\n    chart.ctx.fill();\n};\nconst $74a7cbc4cfd4bd2b$export$b3890eb0ae9dca99 = (chart, dataset, settings = {})=>{\n    settings = settings || $74a7cbc4cfd4bd2b$var$DEFAULT_SETTINGS;\n    const color = settings.color || $74a7cbc4cfd4bd2b$var$DEFAULT_SETTINGS.color;\n    const lineWidth = settings.lineWidth || $74a7cbc4cfd4bd2b$var$DEFAULT_SETTINGS.lineWidth;\n    if (settings.gradient) $74a7cbc4cfd4bd2b$var$gradient(chart, dataset, color);\n    chart.ctx.strokeStyle = color;\n    chart.ctx.lineWidth = lineWidth;\n    chart.ctx.beginPath();\n    for (const point of dataset){\n        const next = point.next();\n        if (next) {\n            chart.ctx.moveTo(point.current.x, point.current.y);\n            chart.ctx.lineTo(next.x, next.y);\n        }\n    }\n    chart.ctx.closePath();\n    chart.ctx.stroke();\n};\n\n\nconst $22f20492d796e0c6$export$ff416b0d33795a06 = (chart, key, transform)=>{\n    const { axisBottom: axisBottomSettings } = chart.settings;\n    const maxTickUnit = axisBottomSettings.interval / axisBottomSettings.tickIntervalCount * 1.5;\n    const data = chart.data;\n    const transformData = (item)=>({\n            x: transform.x(item.time || item[axisBottomSettings.key]),\n            y: transform.y(item[key])\n        });\n    return {\n        get start () {\n            return transformData(data[0]);\n        },\n        get end () {\n            return transformData(data[data.length - 1]);\n        },\n        [Symbol.iterator] () {\n            let i = 0;\n            return {\n                next () {\n                    const item = data[i++];\n                    if (!item) return {\n                        done: true,\n                        value: null\n                    };\n                    return {\n                        done: false,\n                        value: {\n                            current: transformData(item),\n                            next: ()=>{\n                                const nextPoint = data[i];\n                                if (!nextPoint) return null;\n                                if (nextPoint.t - item.t >= maxTickUnit) return;\n                                return transformData(nextPoint);\n                            }\n                        }\n                    };\n                }\n            };\n        }\n    };\n};\n\n\n\nclass $3e20c7ef9b79ccc1$var$Line {\n    constructor(){\n        this._settings = {};\n        this.type = \"line\";\n        this.render = (0, $74a7cbc4cfd4bd2b$export$b3890eb0ae9dca99);\n        this.dataset = (0, $22f20492d796e0c6$export$ff416b0d33795a06);\n        this.DataStash = (0, $2c07ef7af6c6a670$export$3c28480140baf9f3);\n    }\n    settings(settings) {\n        const bar = new $3e20c7ef9b79ccc1$var$Line();\n        bar._settings = settings;\n        return bar;\n    }\n}\nconst $3e20c7ef9b79ccc1$export$53f1d5ea8de3d7c = new $3e20c7ef9b79ccc1$var$Line();\n\n\nconst $67e0244edc17bd8a$export$b3890eb0ae9dca99 = (chart, dataset, settings = {})=>{\n    for (const ohlc of dataset){\n        chart.ctx.fillStyle = ohlc.color;\n        chart.ctx.strokeStyle = ohlc.color;\n        chart.ctx.lineWidth = 1;\n        chart.ctx.fillRect(...ohlc.rect);\n        chart.ctx.beginPath();\n        chart.ctx.moveTo(...ohlc.line.p0);\n        chart.ctx.lineTo(...ohlc.line.p1);\n        chart.ctx.closePath();\n        chart.ctx.stroke();\n    }\n};\n\n\nconst $082f6a8ad09c2f53$export$ff416b0d33795a06 = (chart, _, transform)=>{\n    const data = chart.data;\n    const transformData = (item)=>{\n        const x0 = transform.x(item.start);\n        const y0 = transform.y(item.open);\n        const w = transform.x(item.end) - x0;\n        const h = transform.y(item.close) - y0;\n        const x = transform.x(item.t);\n        return {\n            rect: [\n                x0,\n                y0,\n                w,\n                h\n            ],\n            line: {\n                p0: [\n                    x,\n                    transform.y(item.low)\n                ],\n                p1: [\n                    x,\n                    transform.y(item.high)\n                ]\n            },\n            color: h > 0 ? \"#F6465D\" : \"#2DBC85\"\n        };\n    };\n    return {\n        get start () {\n            return transformData(data[0]);\n        },\n        get end () {\n            return transformData(data[data.length - 1]);\n        },\n        [Symbol.iterator] () {\n            let i = 0;\n            return {\n                next () {\n                    const item = data[i++];\n                    if (!item) return {\n                        done: true,\n                        value: null\n                    };\n                    return {\n                        done: false,\n                        value: transformData(item)\n                    };\n                }\n            };\n        }\n    };\n};\n\n\n\nclass $4d3baeb684af8e57$export$54c1936901e370aa {\n    constructor(chart, { onChange: onChange = ()=>{} }){\n        this.chart = chart;\n        this.onChange = onChange;\n        this._data = new Map();\n    }\n    get tickIntervalUnit() {\n        return this.chart.axisBottom.tickInterval / this.chart.axisBottom.tickIntervalCount;\n    }\n    get key() {\n        return {\n            x: this.chart.axisBottom.key,\n            y: this.chart.axisRight.key\n        };\n    }\n    get data() {\n        return [\n            ...this._data.values()\n        ];\n    }\n    add(data) {\n        data = Array.isArray(data) ? data : [\n            data\n        ];\n        for(let index = 0; index < data.length; index++)this.format(data[index]);\n        this.onChange(this.data);\n    }\n    format(item) {\n        const keyX = this.key.x;\n        const keyY = this.key.y;\n        const { timestamp: timestamp, start: start, end: end } = (0, $b9599d9d0df2bf99$export$b26e4e7b620435eb)(item[keyX], this.tickIntervalUnit);\n        let ohlc = this._data.get(timestamp);\n        if (!ohlc) {\n            const open = this.latest ? this.latest.close : item[keyY];\n            ohlc = {\n                t: timestamp,\n                start: start,\n                end: end,\n                open: open,\n                close: open,\n                low: open,\n                high: open\n            };\n        } else {\n            if (item[keyY] < ohlc.low) ohlc.low = item[keyY];\n            else if (item[keyY] > ohlc.high) ohlc.high = item[keyY];\n            ohlc.close = item[keyY];\n        }\n        this._data.set(ohlc.t, ohlc);\n    }\n    get oldest() {\n        return this.data[0];\n    }\n    get latest() {\n        return this.data[this.data.length - 1];\n    }\n    get helpers() {\n        return {\n            lowHigh (data) {\n                return data.reduce((acc, item)=>{\n                    if (acc[0] === undefined || item.low < acc[0]) acc[0] = item.low;\n                    if (acc[1] === undefined || item.high > acc[1]) acc[1] = item.high;\n                    return acc;\n                }, []);\n            }\n        };\n    }\n}\n\n\nclass $b89f737e87331599$var$Candlestick {\n    constructor(){\n        this._settings = {};\n        this.type = \"candlestick\";\n        this.render = (0, $67e0244edc17bd8a$export$b3890eb0ae9dca99);\n        this.dataset = (0, $082f6a8ad09c2f53$export$ff416b0d33795a06);\n        this.DataStash = (0, $4d3baeb684af8e57$export$54c1936901e370aa);\n    }\n    settings(settings) {\n        const bar = new $b89f737e87331599$var$Candlestick();\n        bar._settings = settings;\n        return bar;\n    }\n}\nconst $b89f737e87331599$export$75fd59269bca8515 = new $b89f737e87331599$var$Candlestick();\n\n\n\nconst $813bf1d5493b888a$export$27924e57e9afff7f = (string)=>{\n    try {\n        return JSON.parse(string);\n    } catch (error) {\n        return null;\n    }\n};\n\n\n\n\nconst $b8c352d23d613130$var$search = new URLSearchParams(window.location.search);\nconst $b8c352d23d613130$var$theme = $b8c352d23d613130$var$search.get(\"theme\") || \"dark\"; // dark or light\nconst $b8c352d23d613130$var$canvas = document.getElementById(\"chart\");\n$b8c352d23d613130$var$canvas.width = window.innerWidth;\n$b8c352d23d613130$var$canvas.height = window.innerHeight;\n$b8c352d23d613130$var$canvas.style.backgroundColor = $b8c352d23d613130$var$theme === \"dark\" ? \"#151718\" : \"#FFFFFF\";\nconst $b8c352d23d613130$var$chart = new (0, $03fdc13f753a2bea$export$acaa6426d77a227e)($b8c352d23d613130$var$canvas.getContext(\"2d\"), {\n    theme: {\n        text: $b8c352d23d613130$var$theme === \"dark\" ? \"#B7BDC6\" : \"#030712\"\n    },\n    padding: {\n        left: 4,\n        right: 4\n    },\n    axisRight: {\n        range: [\n            0,\n            12000\n        ],\n        key: \"socket_count\",\n        unit: \"Socket\"\n    },\n    axisLeft: {\n        width: 28,\n        range: [\n            0,\n            100\n        ],\n        keys: [\n            \"cpu\",\n            \"memory\"\n        ],\n        unit: \"%\"\n    },\n    axisBottom: {\n        height: 16,\n        key: \"t\",\n        interval: 12 * (0, $b9599d9d0df2bf99$export$5dd2165da01bec80)(\"10s\"),\n        tickIntervalCount: 12,\n        label: (value)=>(0, $b9599d9d0df2bf99$export$d9468344d3651243)(value, \"HH:mm\")\n    },\n    config: [\n        {\n            chart: (0, $78aa687a3a3a1a75$export$d927737047eb3867).settings({\n                color: \"#F6465D\"\n            }),\n            key: \"socket_count\"\n        },\n        {\n            chart: (0, $3e20c7ef9b79ccc1$export$53f1d5ea8de3d7c).settings({\n                color: \"#2DBC85\",\n                lineWidth: 2\n            }),\n            key: \"cpu\"\n        },\n        {\n            chart: (0, $3e20c7ef9b79ccc1$export$53f1d5ea8de3d7c).settings({\n                lineWidth: 2\n            }),\n            key: \"memory\"\n        }\n    ]\n});\n$b8c352d23d613130$var$chart.draw();\ndocument.addEventListener(\"message\", (event)=>{\n    const payload = event.data;\n    if (!payload) return;\n    if (payload.event === \"data\") $b8c352d23d613130$var$chart.dataStash.add(payload.data);\n    if (window.ReactNativeWebView) window.ReactNativeWebView.postMessage(JSON.stringify({\n        status: \"received\",\n        originalMessage: payload\n    }));\n});\n\n})();\n//# sourceMappingURL=index.6fba3efd.js.map\n","import {\n  Chart,\n  parseJSON,\n  bar,\n  line,\n  ms,\n  format,\n} from '@gravityxlab/libs';\n\nconst search = new URLSearchParams(window.location.search);\nconst theme = search.get('theme') || 'dark'; // dark or light\n\nconst canvas =  document.getElementById('chart');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\ncanvas.style.backgroundColor = theme === 'dark' ? '#151718' : '#FFFFFF';\n\nconst chart = new Chart(\n  canvas.getContext('2d'),\n  {\n    theme: {\n      text: theme === 'dark' ? '#B7BDC6' : '#030712',\n    },\n    padding: {\n      left: 4,\n      right: 4,\n    },\n    axisRight: {\n      range: [0, 12000],\n      key: 'socket_count',\n      unit: 'Socket'\n    },\n    axisLeft: {\n      width: 28,\n      range: [0, 100],\n      keys: ['cpu', 'memory'],\n      unit: '%',\n    },\n    axisBottom: {\n      height: 16,\n      key: 't',\n      interval: 12 * ms('10s'),\n      tickIntervalCount: 12,\n      label: (value) => format(value, 'HH:mm'),\n    },\n    config: [\n      {\n        chart: bar.settings({\n          color: '#F6465D'\n        }),\n        key: 'socket_count',\n      },\n      {\n        chart: line.settings({\n          color: '#2DBC85',\n          lineWidth: 2,\n        }),\n        key: 'cpu',\n      },\n      {\n        chart: line.settings({\n          lineWidth: 2,\n        }),\n        key: 'memory',\n      }\n    ],\n  }\n);\n\nchart.draw();\n\ndocument.addEventListener('message', (event) => {\n  const payload = event.data;\n  if (!payload) {\n    return;\n  }\n\n  if (payload.event === 'data') {\n    chart.dataStash.add(payload.data);\n  }\n\n  if (window.ReactNativeWebView) {\n    window.ReactNativeWebView.postMessage(JSON.stringify({ status: 'received', originalMessage: payload}));\n  }\n});","export { Chart } from './chart/Chart';\nexport { bar } from './chart/type/bar';\nexport { line } from './chart/type/line';\nexport { candlestick } from './chart/type/candlestick';\n\nexport { ms, format } from './time';\nexport { parseJSON } from './json';","import { BaseChart } from './BaseChart';\nimport { AxisBottom } from './Axis/AxisBottom';\nimport { AxisRight } from './Axis/AxisRight';\nimport { AxisLeft } from './Axis/AxisLeft';\nimport { Grid } from './Grid';\nimport { binarySearch } from '../array';\n\nexport class Chart extends BaseChart {\n  constructor(ctx, settings) {\n    super(ctx, settings);\n\n    this.axisBottom = new AxisBottom(this, this.settings.axisBottom);\n\n    this.settings.config.forEach(({ chart }, index) => {\n      if (index === 0) {\n        this.dataStash = new chart.DataStash(this, {\n          onChange: this.draw.bind(this),\n        });\n      }\n    });\n\n    this.axisRight = new AxisRight(this, this.settings.axisRight);\n\n    if (this.settings.axisLeft) {\n      this.axisLeft = new AxisLeft(this, this.settings.axisLeft);\n    }\n\n    this.grid = new Grid(this);\n  }\n\n  get data() {\n    const startIndex = binarySearch(this.dataStash.data, this.axisBottom.value(this.innerLeft - 10), this.settings.axisBottom.key);\n    return this.dataStash.data.slice(startIndex);\n  }\n\n  draw() {\n    \n    this.axisBottom.draw(this.dataStash);\n    this.grid.draw(this.axisBottom, this.axisRight);\n\n    this.settings.config.forEach(({ chart, key }) => {\n      const { render, dataset } = chart;\n\n      let transform;\n\n      if (this.axisRight.settings.key === key) {\n        transform = {\n          x: this.axisBottom.x.bind(this.axisBottom),\n          y: this.axisRight.y.bind(this.axisRight),\n        };\n      } else if (this.axisLeft.settings.keys.includes(key)) {\n        transform = {\n          x: this.axisBottom.x.bind(this.axisBottom),\n          y: this.axisLeft.y.bind(this.axisLeft),\n        };\n      }\n\n      if (transform) {\n        render(\n          this,\n          dataset(this, key, transform),\n          chart._settings\n        );\n      }\n    });\n\n    this.axisRight.draw(this.data);\n\n    if (this.settings.axisLeft) {\n      this.axisLeft.draw(this.data);\n    }\n\n    super.clear();\n  }\n}","export class BaseChart {\n  constructor(ctx, settings) {\n    this.ctx = ctx;\n    this.width = this.ctx.canvas.width;\n    this.height = this.ctx.canvas.height;\n\n    this.settings = settings;\n\n    if (!this.settings.config) {\n      this.settings.config = [{\n        chart: this.settings.chart,\n        key: this.settings.axisRight.key,\n      }];\n    }\n\n    if (this.settings.axisBottom && !this.settings.axisBottom.height) {\n      this.settings.axisBottom.height = 40;  \n    }\n\n    if (this.settings.axisLeft && !this.settings.axisLeft.width) {\n      this.settings.axisLeft.width = 50;  \n    }\n\n    if (this.settings.axisRight && !this.settings.axisRight.width) {\n      this.settings.axisRight.width = 50;\n    }\n  }\n\n  get padding() {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      ...this.settings.padding,\n    };\n  }\n\n  get innerTop() {\n    return this.padding.top;\n  }\n\n  get innerLeft() {\n    if (this.settings.axisLeft) {\n      return this.settings.axisLeft?.width + this.padding.left;\n    }\n\n    return this.padding.left;\n  }\n\n  get innerHeight() {\n    return this.height - this.padding.top - this.padding.bottom - this.settings.axisBottom.height;\n  }\n\n  get innerBottom() {\n    return this.innerTop + this.innerHeight;\n  }\n\n  get innerWidth() {\n    return this.width - this.innerLeft - this.padding.right - this.settings.axisRight.width;\n  }\n\n  get theme() {\n    return {\n      text: '#B7BDC6',\n      ...this.settings.theme,\n    };\n  }\n\n  clear() {\n    if (this.padding.top) {\n      this.ctx.clearRect(0, 0, this.width, this.padding.top);\n    }\n\n    if (this.padding.left) {\n      this.ctx.clearRect(0, 0, this.padding.left, this.height);\n    }\n\n    if (this.padding.right) {\n      this.ctx.clearRect(this.width - this.padding.right, 0, this.padding.right, this.height);\n    }\n  }\n}\n\n","import { Axis } from './Axis';\nimport { ms, format, getTimeSlot } from '../../time';\nimport { text } from '../../canvas';\n\nexport class AxisBottom extends Axis {\n  constructor(chart, settings) {\n    super('axis_bottom', chart, settings);\n\n    this.left = this.chart.innerLeft;\n    this.height = this.settings.height;\n    this.top = this.chart.innerBottom;\n    this.width = this.chart.innerLeft + this.chart.innerWidth;\n\n    this.benchmark = {\n      point: this.chart.innerLeft + this.chart.innerWidth - 20,\n      value: null,\n    };\n\n    \n    this.tickInterval = settings.interval || ms('15m');\n    this.tickIntervalCount = settings.tickIntervalCount;\n    this.tickSizeUnit = 6;\n    this.tickCount = Math.ceil(this.chart.innerWidth / (this.tickIntervalCount * this.tickSizeUnit));\n    this.tickSize = this.tickIntervalCount * this.tickSizeUnit;\n\n    this.ticks = [];\n  }\n\n  x(value) {\n    return (this.benchmark.point) + ((value - this.benchmark.value) / this.tickInterval) * this.tickSize;\n  }\n\n  value(x) {\n    return Math.floor(((x - this.benchmark.point) / this.tickSize) * this.tickInterval + this.benchmark.value);\n  }\n\n  draw(dataStash) {\n    this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n\n    let oldest = dataStash.oldest?.[this.key];\n    let latest = dataStash.latest?.[this.key];\n    if (!oldest || !latest) {\n      const now = Date.now();\n\n      if (!oldest) {\n        oldest = now;\n      }\n\n      if (!latest) {\n        latest = now;\n      }\n\n    }\n    const range = {\n      start: getTimeSlot(oldest, this.tickInterval).start,\n      end: getTimeSlot(latest, this.tickInterval).end\n    };\n\n    const values = [range.end];\n\n    while (values[0] - this.tickInterval >= range.start && values.length <= this.tickCount) {\n      values.unshift(values[0] - this.tickInterval);\n    }\n\n    while (values.length <= this.tickCount) {\n      values.push(values[values.length - 1] + this.tickInterval);\n    }\n\n    this.benchmark.value = values[values.length - 2];\n\n    if (this.x(latest) > this.benchmark.point) {\n      this.benchmark.value = latest;\n    }\n\n    this.chart.ctx.beginPath();\n    this.chart.ctx.strokeStyle = '#2B3139';\n    this.chart.ctx.lineWidth = 1;\n    this.chart.ctx.moveTo(this.left, this.top);\n    this.chart.ctx.lineTo(this.width, this.top);\n    this.chart.ctx.stroke();\n\n    this.ticks = values.map((value) => {\n      const date = new Date(value);\n      return {\n        label: this.settings.label(date),\n        value: date.getTime(),\n        x: this.x(value),\n        y: this.top + (this.height / 2),\n      };\n    });\n\n    this.ticks.forEach((tick) => {\n      text(this.chart.ctx, { fillStyle: this.chart.theme.text })(tick.label, tick.x, tick.y);\n    });\n  }\n}\n","export class Axis {\n  constructor(type, chart, settings) {\n    this.type = type;\n    this.chart = chart;\n    this.settings = settings;\n  }\n\n  get key() {\n    return this.settings.key;\n  }\n\n  get range() {\n    return this.settings.range || ['auto', 'auto'];\n  }\n\n  low(value) {\n    if (typeof this.range[0] === 'number') {\n      return this.range[0];\n    }\n\n    return value;\n  }\n\n  high(value) {\n    if (typeof this.range[1] === 'number') {\n      return this.range[1];\n    }\n    \n    return value;\n  }\n}\n","export const timeUnitMsMap = new Map([\n  [/^(\\d+)d$/, (match) => parseInt(match[1], 10) * 24 * 60 * 60 * 1000],\n  [/^(\\d+)h$/, (match) => parseInt(match[1], 10) * 60 * 60 * 1000],\n  [/^(\\d+)m$/, (match) => parseInt(match[1], 10) * 60 * 1000],\n  [/^(\\d+)s$/, (match) => parseInt(match[1], 10) * 1000],\n]);\n\nexport function ms(input) {\n  for (const [regex, calc] of timeUnitMsMap) {\n    const match = regex.exec(input);\n    if (match) {\n      return calc(match);\n    }\n  }\n\n  throw new Error('No match any time format.');\n}\n\nexport function getTimeSlot(date, interval = ms('15m')) {\n  date = typeof date === 'number' ? new Date(date) : date;\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n\n  const totalMilliseconds = \n    (hours * 60 * 60 * 1000) +\n    (minutes * 60 * 1000) +\n    (seconds * 1000) +\n    milliseconds;\n\n  const slot = Math.floor(totalMilliseconds / interval);\n\n  const startOfSlotMilliseconds = slot * interval;\n  const endOfSlotMilliseconds = (slot + 1) * interval;\n\n  const startTimestamp = date.setHours(0, 0, 0, 0) + startOfSlotMilliseconds;\n  const endTimestamp = date.setHours(0, 0, 0, 0) + endOfSlotMilliseconds;\n\n  return {\n      start: startTimestamp,\n      end: endTimestamp\n  };\n}\n\nexport function getTimeSlotTimestamp(date, interval = ms('15m')) {\n  date = typeof date === 'number' ? new Date(date) : date;\n  const { start, end } = getTimeSlot(date, interval);\n\n  return {\n    start,\n    end,\n    timestamp: start + ((end - start) / 2),\n  };\n}\n\nexport function format(date, pattern) {\n  if (pattern.includes('MM')) {\n    pattern = pattern.replace(/MM/g, String(date.getMonth() + 1).padStart(2, '0'));\n  }\n\n  if (pattern.includes('DD')) {\n    pattern = pattern.replace(/DD/g, String(date.getDate()).padStart(2, '0'));\n  }\n\n  if (pattern.includes('HH')) {\n    pattern = pattern.replace(/HH/g, String(date.getHours()).padStart(2, '0'));\n  }\n\n  if (pattern.includes('mm')) {\n    pattern = pattern.replace(/mm/g, String(date.getMinutes()).padStart(2, '0'));\n  }\n\n  return pattern;\n}","const DEFAULT_SETTINGS = { \n  textAlign: 'center',\n  textBaseline: 'middle',\n  font: '11px Arial',\n  fillStyle: '#B7BDC6',\n}\nexport function text(\n  ctx,\n  { \n    textAlign = DEFAULT_SETTINGS.textAlign,\n    textBaseline =DEFAULT_SETTINGS.textBaseline,\n    font =DEFAULT_SETTINGS.font,\n    fillStyle = DEFAULT_SETTINGS.fillStyle,\n  } = DEFAULT_SETTINGS) {\n    return (text, x, y) => {\n      ctx.textAlign = textAlign;\n      ctx.textBaseline = textBaseline;\n      ctx.font = font;\n      ctx.fillStyle = fillStyle;\n      ctx.fillText(text, x, y);\n    };\n}","import { AxisVertical } from './AxisVertical';\nimport { text } from '../../canvas';\n\nexport class AxisRight extends AxisVertical {\n  constructor(chart, settings) {\n    const bounds = {\n      top: chart.padding.top,\n      width: settings.width,\n      left: chart.innerLeft + chart.innerWidth,\n      height: chart.height - chart.padding.bottom,\n    };\n\n    super('axis_right', chart, bounds, settings);\n  }\n}\n","import { Axis } from './Axis';\nimport { text } from '../../canvas';\n\nexport class AxisVertical extends Axis {\n  constructor(type, chart, bounds, settings) {\n    super(type, chart, settings);\n\n    this.top = bounds.top;\n    this.left = bounds.left;\n    this.width = bounds.width;\n    this.height = bounds.height;\n\n    this.benchmark = {\n      point: this.chart.innerBottom - 10,\n      value: null,\n    };\n\n    this.ticks = [];\n  }\n\n  get tickSize() {\n    return Math.abs(Math.floor((this.benchmark.point - this.top - 24) / 4));\n  }\n\n  y(value) {\n    return Math.min(\n      this.benchmark.point + ((this.benchmark.value - value) / this.tickInterval) * this.tickSize,\n      this.chart.innerBottom - 1,\n    );\n  }\n\n  draw(data) {\n    this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n\n    const lowHigh = this.chart.dataStash.helpers.lowHigh(data);\n\n    const low = this.low(Math.floor(lowHigh[0] / 20) * 20);\n    const high = this.high(Math.ceil(lowHigh[1] / 20) * 20);\n\n    this.chart.ctx.beginPath();\n    this.chart.ctx.strokeStyle = '#2B3139';\n    this.chart.ctx.lineWidth = 1;\n    if (this.type === 'axis_left') {\n      this.chart.ctx.moveTo(this.left + this.width, this.top);\n      this.chart.ctx.lineTo(this.left + this.width, this.height);\n    } else {\n      this.chart.ctx.moveTo(this.left, this.top);\n      this.chart.ctx.lineTo(this.left, this.height);\n    }\n\n    if (low !== 0) {\n      this.chart.ctx.moveTo(this.left, this.chart.axisBottom.top);\n      this.chart.ctx.lineTo(this.chart.width, this.chart.axisBottom.top);\n    }\n    \n    this.chart.ctx.stroke();\n\n    if (this.settings.unit) {\n      text(this.chart.ctx, { fillStyle: this.chart.theme.text })(\n        `(${this.settings.unit})`,\n        this.left + this.width / 2,\n        this.top + 10,\n      );\n    }\n\n    if (low === 0) {\n      this.benchmark.point = this.chart.axisBottom.top;\n      this.benchmark.value = 0;\n    } else {\n      this.benchmark.value = low;\n    }\n\n    this.tickInterval = Math.ceil((high - low) / 4);\n\n    const ticks = [];\n\n    let x\n    if (this.type === 'axis_left') {\n      x = this.chart.padding.left + this.width / 2;\n    } else {\n      x =  this.left + this.width / 2\n    }\n\n    for (let index = 0; index < 5; index++) {\n      const value = low + this.tickInterval * index;\n\n      const tick = {\n        label: value,\n        value,\n        x,\n        y: this.y(value),\n      };\n\n      ticks.push(tick);\n\n      text(this.chart.ctx, { fillStyle: this.chart.theme.text })(tick.label, tick.x, tick.y);   \n    }\n\n    this.ticks = ticks;\n  }\n}\n","import { AxisVertical } from './AxisVertical';\nimport { text } from '../../canvas';\n\nexport class AxisLeft extends AxisVertical {\n  constructor(chart, settings) {\n    const bounds = {\n      top: chart.padding.top,\n      width: settings.width,\n      left: chart.padding.left,\n      height: chart.height - chart.padding.bottom,\n    };\n\n    super('axis_left', chart, bounds, settings);\n  }\n}\n","class Grid {\n  constructor(chart) {\n    this.chart = chart;\n  }\n\n  draw(axisBottom, axisRight) {\n    this.left = this.chart.innerLeft;\n    this.top = 0;\n    this.width = this.chart.width - axisRight.width - this.left;\n    this.height = this.chart.innerBottom;\n\n    this.chart.ctx.clearRect(this.left, this.top, this.width, this.height);\n    this.chart.ctx.beginPath();\n    this.chart.ctx.strokeStyle = '#2B3139';\n    this.chart.ctx.lineWidth = 1;\n\n    axisBottom.ticks.forEach((tick) => {\n      if (tick.x > axisRight.left) {\n        return;\n      }\n      this.chart.ctx.moveTo(tick.x, this.top);\n      this.chart.ctx.lineTo(tick.x, this.height);\n    });\n\n    axisRight.ticks.forEach((tick) => {\n      if (tick.y >= this.chart.innerBottom - 2) {\n        return;\n      }\n\n      this.chart.ctx.moveTo(this.left + this.chart.ctx.lineWidth, tick.y);\n      this.chart.ctx.lineTo(this.width + this.left, tick.y);\n    });\n    this.chart.ctx.stroke();\n  }\n}\n\nexport { Grid };","export function binarySearch(array, target, attribute) {\n  let left = 0;\n  let right = array.length - 1;\n  \n  while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (array[mid][attribute] < target) {\n          left = mid + 1;\n      } else {\n          right = mid - 1;\n      }\n  }\n  \n  return left;\n}\n","import { render } from './render';\nimport { dataset } from './dataset';\nimport { ArrayStash } from '../../DataStash/ArrayStash';\n\nclass Bar {\n  constructor() {\n    this._settings = {};\n    this.type = 'bar';\n    this.render = render;\n    this.dataset = dataset;\n    this.DataStash = ArrayStash;\n  }\n\n  settings(settings) {\n    const bar = new Bar();\n    bar._settings = settings;\n    return bar;\n  }\n}\n\nconst bar = new Bar();\n\nexport { bar };\n","export const render = (chart, dataset, settings = {}) => {\n  for (const item of dataset) {\n    chart.ctx.fillStyle = settings.color;\n    chart.ctx.fillRect(...item);\n  }\n};\n","import { getTimeSlotTimestamp } from '../../../time';\n\nexport const dataset = (chart, key, transform) => {\n  const data = chart.data;\n\n  const transformData = (item) => {\n    const {\n      axisBottom: axisBottomSettings,\n      axisBottom: { interval, tickIntervalCount }\n    } = chart.settings;\n    const value = item[key];\n    const { start, end } = getTimeSlotTimestamp(value.time || item[axisBottomSettings.key], interval / tickIntervalCount);\n    \n    const x = transform.x(start);\n    const h = transform.y(value);\n    const dx = transform.x(end) - x;\n    const dy = chart.innerBottom - h\n\n    return [\n      x,\n      h,\n      dx,\n      dy,\n    ]\n  };\n\n  return {\n    get start() {\n      return transformData(data[0]);\n    },\n    get end() {\n      return transformData(data[data.length - 1]);\n    },\n    [Symbol.iterator]() {\n      let i = 0;\n\n      return {\n        next() {\n          const item = data[i++];\n          if (!item) return { done: true, value: null };\n          return { \n            done: false,\n            value: transformData(item)\n          };\n        }\n      };\n    }\n  };\n};\n","export class ArrayStash {\n  constructor(chart, { onChange = () => {}}) {\n    this.chart = chart;\n    this.onChange = onChange;\n    this._data = new Map();\n  }\n\n  get key() {\n    return {\n      x: this.chart.axisBottom.key,\n      y: this.chart.axisRight.key,\n    };\n  }\n\n  get data() {\n    return [...this._data.values()];\n  }\n\n  add(data) {\n    data = Array.isArray(data) ? data : [data];\n\n    for (let index = 0; index < data.length; index++) {\n      const item = data[index];\n      item.time = new Date(item[this.key.x])\n      this._data.set(item.t, item);\n    }\n\n    this.onChange(this.data);\n  }\n\n  get oldest() {\n    return this.data[0];\n  }\n\n  get latest() {\n    return this.data[this.data.length - 1];\n  }\n\n  get helpers() {\n    const keyY = this.key.y;\n    return {\n      lowHigh(data) {\n        return data.reduce((acc, item) => {\n          if (acc[0] === undefined || item[keyY] < acc[0]) {\n            acc[0] = item[keyY];\n          }\n      \n          if (acc[1] === undefined || item[keyY] > acc[1]) {\n            acc[1] = item[keyY];\n          }\n          return acc;\n        }, []);\n      },\n    }\n  }\n}\n","import { render } from './render';\nimport { dataset } from './dataset';\nimport { ArrayStash } from '../../DataStash/ArrayStash';\n\nclass Line {\n  constructor() {\n    this._settings = {};\n    this.type = 'line';\n    this.render = render;\n    this.dataset = dataset;\n    this.DataStash = ArrayStash;\n  }\n\n  settings(settings) {\n    const bar = new Line();\n    bar._settings = settings;\n    return bar;\n  }\n}\n\nconst line = new Line();\n\nexport { line };","\nconst DEFAULT_SETTINGS = { gradient: true, color: '#FCD435', lineWidth: 1 };\n\nconst gradient = (chart, dataset, color) => {\n  const gradient = chart.ctx.createLinearGradient(0, 0, 0, chart.innerBottom);\n  gradient.addColorStop(0, color);\n  gradient.addColorStop(1, `${color}00`);\n\n  chart.ctx.beginPath();\n\n  let moveTo;\n  for (const point of dataset) {\n    if (!moveTo) {\n      chart.ctx.moveTo(point.current.x, point.current.y);\n      moveTo = point.current;\n    } else {\n      chart.ctx.lineTo(point.current.x, point.current.y);\n    }\n  }\n\n  chart.ctx.lineTo(dataset.end.x, chart.innerBottom);\n  chart.ctx.lineTo(dataset.start.x, chart.innerBottom);\n\n  chart.ctx.closePath();\n\n  chart.ctx.fillStyle = gradient;\n  chart.ctx.fill();\n};\n\nexport const render = (chart, dataset, settings = {}) => {\n  settings = settings || DEFAULT_SETTINGS;\n  const color = settings.color || DEFAULT_SETTINGS.color;\n  const lineWidth =  settings.lineWidth || DEFAULT_SETTINGS.lineWidth;\n\n  if (settings.gradient) {\n    gradient(chart, dataset, color);\n  }\n\n  chart.ctx.strokeStyle = color;\n  chart.ctx.lineWidth = lineWidth;\n\n  chart.ctx.beginPath();\n  for (const point of dataset) {\n\n    const next = point.next();\n    if (next) {\n      chart.ctx.moveTo(point.current.x, point.current.y);\n      chart.ctx.lineTo(next.x, next.y);\n    }\n  }\n  chart.ctx.closePath();\n  chart.ctx.stroke();\n};\n","\nexport const dataset = (chart, key, transform) => {\n  const {\n    axisBottom: axisBottomSettings,\n  } = chart.settings;\n  const maxTickUnit = (axisBottomSettings.interval / axisBottomSettings.tickIntervalCount) * 1.5;\n  const data = chart.data;\n\n  const transformData = (item) => ({\n    x: transform.x(item.time || item[axisBottomSettings.key]),\n    y: transform.y(item[key]),\n  });\n\n  return {\n    get start() {\n      return transformData(data[0]);\n    },\n    get end() {\n      return transformData(data[data.length - 1]);\n    },\n    [Symbol.iterator]() {\n      let i = 0;\n\n      return {\n        next() {\n          const item = data[i++];\n          if (!item) return { done: true, value: null };\n\n          return { \n            done: false,\n            value: {\n              current: transformData(item),\n              next: () => {\n                const nextPoint = data[i];\n                if (!nextPoint) return null;\n                if (nextPoint.t - item.t >= maxTickUnit) {\n                  return;\n                }\n                return transformData(nextPoint);\n              } \n            }\n          };\n        }\n      };\n    }\n  };\n};\n","import { render } from './render';\nimport { dataset } from './dataset';\nimport { OhlcStash } from '../../DataStash/OhlcStash';\n\nclass Candlestick {\n  constructor() {\n    this._settings = {};\n    this.type = 'candlestick';\n    this.render = render;\n    this.dataset = dataset;\n    this.DataStash = OhlcStash;\n  }\n\n  settings(settings) {\n    const bar = new Candlestick();\n    bar._settings = settings;\n    return bar;\n  }\n}\n\nconst candlestick = new Candlestick();\n\nexport { candlestick };\n","export const render = (chart, dataset, settings = {}) => {\n  for (const ohlc of dataset) {\n    chart.ctx.fillStyle = ohlc.color;\n    chart.ctx.strokeStyle = ohlc.color;\n    chart.ctx.lineWidth = 1;\n\n    chart.ctx.fillRect(...ohlc.rect);\n\n    chart.ctx.beginPath();\n    chart.ctx.moveTo(...ohlc.line.p0);\n    chart.ctx.lineTo(...ohlc.line.p1);\n    chart.ctx.closePath();\n    chart.ctx.stroke();\n  }\n};\n","export const dataset = (chart, _, transform) => {\n  const data = chart.data;\n\n  const transformData = (item) => {\n    const x0 = transform.x(item.start);\n    const y0 = transform.y(item.open);\n    const w = transform.x(item.end) - x0;\n    const h = transform.y(item.close) - y0;\n\n    const x = transform.x(item.t);\n\n    return {\n      rect: [\n        x0,\n        y0,\n        w,\n        h,\n      ],\n      line: {\n        p0: [x, transform.y(item.low)],\n        p1: [x, transform.y(item.high)],\n      },\n      color: h > 0 ? '#F6465D' : '#2DBC85',\n    }\n  };\n\n  return {\n    get start() {\n      return transformData(data[0]);\n    },\n    get end() {\n      return transformData(data[data.length - 1]);\n    },\n    [Symbol.iterator]() {\n      let i = 0;\n\n      return {\n        next() {\n          const item = data[i++];\n          if (!item) return { done: true, value: null };\n          return { \n            done: false,\n            value: transformData(item)\n          };\n        }\n      };\n    }\n  };\n};\n","import { getTimeSlot, getTimeSlotTimestamp } from '../../time';\n\nexport class OhlcStash {\n  constructor(chart, { onChange = () => {}}) {\n    this.chart = chart;\n\n    this.onChange = onChange;\n    this._data = new Map();\n  }\n\n  get tickIntervalUnit() {\n    return this.chart.axisBottom.tickInterval / this.chart.axisBottom.tickIntervalCount;\n  }\n\n  get key() {\n    return {\n      x: this.chart.axisBottom.key,\n      y: this.chart.axisRight.key,\n    };\n  }\n\n  get data() {\n    return [...this._data.values()];\n  }\n\n  add(data) {\n    data = Array.isArray(data) ? data : [data];\n\n    for (let index = 0; index < data.length; index++) {\n      this.format(data[index]);\n    }\n\n    this.onChange(this.data);\n  }\n\n  format(item) {\n    const keyX = this.key.x;\n    const keyY = this.key.y;\n    \n    const { timestamp, start, end } = getTimeSlotTimestamp(item[keyX], this.tickIntervalUnit);\n    let ohlc = this._data.get(timestamp);\n\n    if (!ohlc) {\n      const open = this.latest ? this.latest.close : item[keyY];\n      ohlc = {\n        t: timestamp,\n        start,\n        end,\n        open,\n        close: open,\n        low: open,\n        high: open,\n      };\n    } else {\n      if (item[keyY] < ohlc.low) {\n        ohlc.low = item[keyY];\n      } else if (item[keyY] > ohlc.high) {\n        ohlc.high = item[keyY];\n      }\n\n      ohlc.close = item[keyY];\n    }\n\n    this._data.set(ohlc.t, ohlc);\n  }\n\n  get oldest() {\n    return this.data[0];\n  }\n\n  get latest() {\n    return this.data[this.data.length - 1];\n  }\n\n  get helpers() {\n    return {\n      lowHigh(data) {\n        return data.reduce((acc, item) => {\n          if (acc[0] === undefined || item.low < acc[0]) {\n            acc[0] = item.low;\n          }\n      \n          if (acc[1] === undefined || item.high > acc[1]) {\n            acc[1] = item.high;\n          }\n          return acc;\n        }, []);\n      },\n    }\n  }\n}\n\n","export const parseJSON = (string) => {\n  try {\n    return JSON.parse(string);\n\n  } catch (error) {\n    return null;\n  }\n};"],"names":["$652d1c8ff2fc739f$export$ba89768bd61fb9ef","constructor","ctx","settings","width","canvas","height","config","chart","key","axisRight","axisBottom","axisLeft","padding","top","bottom","left","right","innerTop","innerLeft","innerHeight","innerBottom","innerWidth","theme","text","clear","clearRect","$3991084f38fd8b12$export$d06866a9fb0606da","type","range","low","value","high","$b9599d9d0df2bf99$export$a23af3b48bd234ea","Map","match","parseInt","$b9599d9d0df2bf99$export$5dd2165da01bec80","input","regex","calc","exec","Error","$b9599d9d0df2bf99$export$464c6933f2a4525f","date","interval","hours","Date","getHours","minutes","getMinutes","slot","Math","floor","totalMilliseconds","seconds","getSeconds","getMilliseconds","start","setHours","end","$b9599d9d0df2bf99$export$b26e4e7b620435eb","timestamp","$d203371c3e704ae6$var$DEFAULT_SETTINGS","textAlign","textBaseline","font","fillStyle","$d203371c3e704ae6$export$6f093cfa640b7166","x","y","fillText","$3105f33038792f97$export$deea0fad05dcb466","benchmark","point","tickInterval","tickIntervalCount","tickSizeUnit","tickCount","ceil","tickSize","ticks","draw","dataStash","oldest","latest","now","values","length","unshift","push","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","map","label","getTime","forEach","tick","$ea69216c71752dbe$export$5aa047190a2e18c4","bounds","abs","min","data","lowHigh","helpers","unit","index","$e884809d69e70b58$export$2b9971b9af4b4b68","$6527e3c781f90838$export$4b76feaa547cd202","$767b03141f0c34df$export$ef2184bd89960b14","$25ad58b84fcf74a0$export$b3890eb0ae9dca99","dataset","item","color","fillRect","$14e19c79c80f10e2$export$ff416b0d33795a06","transform","transformData","axisBottomSettings","time","h","dx","dy","Symbol","iterator","i","next","done","$2c07ef7af6c6a670$export$3c28480140baf9f3","onChange","_data","add","Array","isArray","set","t","keyY","reduce","acc","undefined","$78aa687a3a3a1a75$var$Bar","_settings","render","DataStash","bar","$78aa687a3a3a1a75$export$d927737047eb3867","$74a7cbc4cfd4bd2b$var$DEFAULT_SETTINGS","gradient","$74a7cbc4cfd4bd2b$var$gradient","createLinearGradient","addColorStop","current","closePath","fill","$74a7cbc4cfd4bd2b$export$b3890eb0ae9dca99","$22f20492d796e0c6$export$ff416b0d33795a06","maxTickUnit","nextPoint","$3e20c7ef9b79ccc1$var$Line","$3e20c7ef9b79ccc1$export$53f1d5ea8de3d7c","$67e0244edc17bd8a$export$b3890eb0ae9dca99","ohlc","rect","line","p0","p1","$082f6a8ad09c2f53$export$ff416b0d33795a06","_","x0","y0","open","w","close","$4d3baeb684af8e57$export$54c1936901e370aa","tickIntervalUnit","format","keyX","get","$b89f737e87331599$var$Candlestick","$b8c352d23d613130$var$theme","$b8c352d23d613130$var$search","URLSearchParams","window","location","search","$b8c352d23d613130$var$canvas","document","getElementById","style","backgroundColor","$b8c352d23d613130$var$chart","bind","grid","startIndex","array","target","attribute","mid","slice","keys","includes","getContext","pattern","replace","String","getMonth","padStart","getDate","addEventListener","event","payload","ReactNativeWebView","postMessage","JSON","stringify","status","originalMessage"],"version":3,"file":"index.6fba3efd.js.map"}